# Project Euler:
# Problem 1: Add all the natural numbers below 1000 that are multiples of 3 or 5.
num = 0
for i in range(1,1000):
    if i%3 == 0 or i%5 == 0:
        num = num+i
        print(num)
# problem 2: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
numbers = [1,2]
sum = 0
for i in range(4000000):
    if i == numbers[-1] +numbers[-2]:
        numbers.append(i)
        for n in numbers:
            if n%2 == 0:
                sum = sum + n
                print(sum)

# EXERCISE 3.4 : GUEST LIST
guest = ["WAJIHA","AYESHA","MEHWISH","NOOR"]
for i in guest:
    print("dear" ,i,"I am delighted to invite you to my house and have dinner..!!")
# EXERCISE 3.5 : CHANGING GUEST LIST
guest = ["WAJIHA","AYESHA","MEHWISH","NOOR"]
del guest[2]
for i in guest:
    print("dear", i, "I am delighted to invite you to my house and have dinner..!!")
# EXERCISE 3.6 : MORE GUEST LIST
guest = ["WAJIHA","AYESHA","MEHWISH","NOOR"]
guest.insert(2,"ume huzaifa")
guest.append("shanfa")
for i in guest:
    print("dear", i, "I am delighted to invite you to my house and have dinner..!!")
# EXERCISE 3.7 : shrinking guest list
guest = ["WAJIHA","AYESHA","MEHWISH","NOOR","SANA"]
n = guest.pop()
for n in guest:
 print("sorry dear" ,n, " have to withdraw my dinner invitation ")

# EXERCISE 3.8 : seeing the world
destinations = ["Asia", "Northern Africa", "The UK", "THE USA", " America", " Australia"]
# Print list according to given order
print(destinations)
#Use sorted() to print list in alphabetical order
print(sorted(destinations))
#Use reverse() to print  list in reverse  order
destinations.reverse()
print(destinations)
#Use sort() to print  list in alphabetical order
destinations.sort()
print(destinations)
#Use sort() to change list and  stored in reverse alphabetical order
destinations.sort(reverse=True)
print(destinations)














